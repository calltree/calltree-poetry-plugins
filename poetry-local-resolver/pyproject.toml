[tool.poetry]
name = "poetry-local-resolver"
version = "1.0.1"
description = "A Poetry plugin that resolves packages locally first, then falls back to remote repositories"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yourusername/poetry-local-resolver"
repository = "https://github.com/yourusername/poetry-local-resolver"
keywords = ["poetry", "plugin", "local", "resolver", "workspace"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
]
packages = [
    { include = "poetry_local_resolver", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.8"
poetry = ">=1.2.0,<3.0.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
mypy = "^1.4.1"
ruff = "^0.0.280"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-local-resolver = "poetry_local_resolver.plugin:LocalResolverPlugin"

[tool.poetry.plugins."poetry.command"]
local-resolver = "poetry_local_resolver.plugin:LocalResolverCommand"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true